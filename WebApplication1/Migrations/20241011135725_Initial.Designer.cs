// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Persistence;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241011135725_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplication1.Persistence.AuctionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("StartPrice")
                        .HasColumnType("double");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AuctionDbs");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Seed Data Description",
                            EndDate = new DateTime(2024, 10, 11, 15, 57, 25, 430, DateTimeKind.Local).AddTicks(4918),
                            ItemName = "Seed",
                            StartPrice = 9999.0,
                            UserName = "SeedUserNameForAuction"
                        });
                });

            modelBuilder.Entity("WebApplication1.Persistence.BidListDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BidListDbs");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Title = "SeedTitle",
                            UserName = "SeedUserName"
                        });
                });

            modelBuilder.Entity("WebApplication1.Persistence.BidsDbs.BidDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<int>("BidListId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("BidListId");

                    b.ToTable("BidDbs");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Amount = 100.0,
                            AuctionId = -1,
                            BidListId = -1,
                            UserName = "SeedUserName"
                        });
                });

            modelBuilder.Entity("WebApplication1.Persistence.BidsDbs.BidDb", b =>
                {
                    b.HasOne("WebApplication1.Persistence.AuctionDb", "AuctionDb")
                        .WithMany("BidDbs")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Persistence.BidListDb", "BidListDb")
                        .WithMany("BidDbs")
                        .HasForeignKey("BidListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuctionDb");

                    b.Navigation("BidListDb");
                });

            modelBuilder.Entity("WebApplication1.Persistence.AuctionDb", b =>
                {
                    b.Navigation("BidDbs");
                });

            modelBuilder.Entity("WebApplication1.Persistence.BidListDb", b =>
                {
                    b.Navigation("BidDbs");
                });
#pragma warning restore 612, 618
        }
    }
}
